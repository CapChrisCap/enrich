// "Gcp" is the only valid option now
auth = {
  type = "Gcp"
}

// Collector input
input = {
  type = "PubSub"
  subscription = "projects/test-project/subscriptions/inputSub"

  // Local FS supported for testing purposes
  // type = "FileSystem"
  // dir = "/var/collector"
}

// Enriched events output
good = {
  type = "PubSub"
  topic = "projects/test-project/topics/good-topic"

  // Local FS supported for testing purposes
  // type = "FileSystem"
  // dir = "/var/enriched"
}

// Bad rows output
bad = {
  type = "PubSub"
  topic = "projects/test-project/topics/bad-topic"

  // Local FS supported for testing purposes
  // type = "FileSystem"
  // dir = "/var/bad"
}

// Optional, for tracking runtime exceptions
sentry = {
  dsn = "http://sentry.acme.com"
}

// Optional, period after which enrich assets should be checked for updates
// no assets will be updated if the key is absent
assetsUpdatePeriod = "7 days"

// Optional, report metrics on event counts and latency
// no metrics will be printed if the key is absent
metricsReportPeriod = "10 seconds"

// Optional, configure how metrics are reported
metricsReporter = {

  // Send metrics to a StatsD server on localhost
  type = "StatsD"
  hostname = "localhost"
  port = 8125

  // Any key-value pairs to be tagged on every metric
  tags = {
    app = enrich

    // Environment variables are resolved to tags
    // host = ${HOSTNAME}
  }


  // The default reporter if metricsReporter is not configured
  // Suitable for development
  // type = "Stdout"
}
